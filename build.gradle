plugins {
    id 'java'
    id "io.freefair.lombok" version "8.0.1"
    id "io.qameta.allure" version "2.11.2"
    id "com.adarshr.test-logger" version "3.2.0"
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}

def allureVersion = "2.21.0"
def junitVersion = "5.8.2"
def jacksonVersion = "2.13.4"
def apacheCommonsLang3Version = "3.11.0"
def apacheCommonsCollections4Version = "4.4"
def apacheHttpclient5Version = "5.2.1"
def selenideVersion  = "6.15.0"
def slf4jVersion = "2.0.5"
def log4j2Version = "2.19.0"

dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'
    testImplementation("io.qameta.allure:allure-junit-platform:$allureVersion")
    testImplementation("io.qameta.allure:allure-selenide:$allureVersion")

    testImplementation(platform("org.junit:junit-bom:$junitVersion"))
    testImplementation("org.junit.jupiter:junit-jupiter:$junitVersion")

    testImplementation("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
    testImplementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion")
    testImplementation("org.apache.commons:commons-lang3:$apacheCommonsLang3Version")
    testImplementation("org.apache.commons:commons-collections4:$apacheCommonsCollections4Version")
    testImplementation("org.apache.httpcomponents.client5:httpclient5:$apacheHttpclient5Version")
    testImplementation("org.slf4j:slf4j-simple:$slf4jVersion")
    testImplementation("org.apache.logging.log4j:log4j-api:$log4j2Version")
    testImplementation("org.apache.logging.log4j:log4j-core:$log4j2Version")

    testImplementation("com.codeborne:selenide:$selenideVersion")

    testImplementation files("lib/ojdbc6.jar")

    implementation 'com.github.javafaker:javafaker:1.0.2'
}

test {
    useJUnitPlatform()
}

tasks.register('testReadOnly', Test) {
    onlyIf { !Boolean.getBoolean("skip.tests") }
    useJUnitPlatform {
        includeTags "readonly"
    }
}